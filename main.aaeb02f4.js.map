{"version":3,"sources":["scripts/main.js"],"names":["wall","document","querySelector","spider","addEventListener","e","target","box","getBoundingClientRect","borderX","width","clientWidth","borderY","height","clientHeight","x","clientX","left","y","clientY","top","spiderRect","style","setProperty"],"mappings":";AAAA,aAEA,IAAMA,EAAOC,SAASC,cAAtB,SACMC,EAASF,SAASC,cAAxB,WAEAD,SAASG,iBAAiB,QAAS,SAAAC,GAE7BA,GAAAA,EAAEC,SAAWN,EAAbK,CAIEE,IAAAA,EAAMP,EAAKQ,wBACXC,GAAWF,EAAIG,MAAQV,EAAKW,aAAe,EAC3CC,GAAWL,EAAIM,OAASb,EAAKc,cAAgB,EAE/CC,EAAIV,EAAEW,QAAUT,EAAIU,KAAOR,EAC3BS,EAAIb,EAAEc,QAAUZ,EAAIa,IAAMR,EACxBS,EAAalB,EAAOK,wBAGpBO,EAAIM,EAAWX,MAAQ,IACzBK,EAAIM,EAAWX,MAAQ,GAGrBQ,EAAIG,EAAWR,OAAS,IAC1BK,EAAIG,EAAWR,OAAS,GAGtBK,EAAIX,EAAIG,MAAkB,EAAVE,EAAcS,EAAWR,OAAS,IACpDK,EAAIX,EAAIG,MAAkB,EAAVE,EAAcS,EAAWR,OAAS,GAGhDE,EAAIR,EAAIG,MAAkB,EAAVD,EAAcY,EAAWX,MAAQ,IACnDK,EAAIR,EAAIG,MAAkB,EAAVD,EAAcY,EAAWX,MAAQ,GAKnDP,EAAOmB,MAAMC,YAAsBL,MAAAA,GAAAA,OAAAA,EAAnC,OACAf,EAAOmB,MAAMC,YAAuBR,OAAAA,GAAAA,OAAAA,EAApC,OACAZ,EAAOmB,MAAMC,YAAb,YAAA","file":"main.aaeb02f4.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst wall = document.querySelector(`.wall`);\nconst spider = document.querySelector(`.spider`);\n\ndocument.addEventListener('click', e => {\n  // write code here\n  if (e.target !== wall) {\n    return;\n  };\n\n  const box = wall.getBoundingClientRect();\n  const borderX = (box.width - wall.clientWidth) / 2;\n  const borderY = (box.height - wall.clientHeight) / 2;\n\n  let x = e.clientX - box.left - borderX;\n  let y = e.clientY - box.top - borderY;\n  const spiderRect = spider.getBoundingClientRect();\n\n  const collisionCheck = () => {\n    if (x < spiderRect.width / 2) {\n      x = spiderRect.width / 2;\n    }\n\n    if (y < spiderRect.height / 2) {\n      y = spiderRect.height / 2;\n    }\n\n    if (y > box.width - borderY * 2 - spiderRect.height / 2) {\n      y = box.width - borderY * 2 - spiderRect.height / 2;\n    }\n\n    if (x > box.width - borderX * 2 - spiderRect.width / 2) {\n      x = box.width - borderX * 2 - spiderRect.width / 2;\n    }\n  };\n\n  const moveSpider = () => {\n    spider.style.setProperty(`top`, `${y}px`);\n    spider.style.setProperty(`left`, `${x}px`);\n    spider.style.setProperty(`transform`, `translateX(-50%) translateY(-50%)`);\n  };\n\n  collisionCheck();\n  moveSpider();\n});\n"]}